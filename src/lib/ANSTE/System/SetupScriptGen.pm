# Copyright (C) 2007 José Antonio Calvo Fernández <jacalvo@warp.es> 
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2, as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

package ANSTE::System::SetupScriptGen;

use strict;
use warnings;

use ANSTE::Scenario::Host;

sub new # (host, system) returns new ServerScriptGen object
{
	my ($class, $host, $system) = @_;

	my $self = {};
	
	$self->{host} = $host;
	$self->{system} = $system;

	bless($self, $class);

	return $self;
}

sub writeScript # (file)
{
	my $self = shift;
	my $file = shift;
	print $file "#!/bin/sh\n";
	my $name = $self->{host}->name();
	my $desc = $self->{host}->desc();
	print $file "\n# Configuration file for host $name\n";
	print $file "# Server description: $desc\n";
	print $file "# Generated by ANSTE\n\n"; 
	$self->_writePackageInstall($file);
	$self->_writeNetworkConfig($file);
}

sub _writePackageInstall # (file)
{
	my ($self, $file) = @_;

	print $file "# Install packages\n";
#	FIXME: my $command = $self->{system}->command("package-install");
    my $command = 'apt-get install -y';
	my @packages = @{$self->{host}->packages()->list()};
	print $file "$command ".join(" ", @packages)."\n\n";
}

sub _writeInterface # (file, iface)
{
    my ($self, $file, $iface) = @_;

    my $name = $iface->name();
	print $file "auto $name\n";
	if ($iface->type() == ANSTE::Scenario::NetworkInterface->IFACE_TYPE_DHCP) {
		print $file "iface $name inet dhcp\n";
	} else {
		my $address = $iface->address();
		my $netmask = $iface->netmask();
		my $gateway = $iface->gateway();
		print $file "iface $name inet static\n";
		print $file "address $address\n";
		print $file "netmask $netmask\n";
		print $file "gateway $gateway\n";
	}
}

sub _writeNetworkConfig # (file)
{
	my ($self, $file) = @_;

	my $network = $self->{host}->network();

	print $file "# Write /etc/network/interfaces\n";
	print $file "cat << EOF > interfaces\n";
	print $file "auto lo\n";
	print $file "iface lo inet loopback\n";
    foreach my $iface (@{$network->interfaces()}) {
	    print $file "\n";
        $self->_writeInterface($file, $iface);
    }
	print $file "EOF\n";
	print $file "\n";
	print $file "# Bring up all the interfaces\n";
	print $file "ifup -a\n";

}

1;
